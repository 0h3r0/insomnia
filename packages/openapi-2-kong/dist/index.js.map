{"version":3,"sources":["common.js","declarative-config/security-plugins.js","declarative-config/plugins.js","declarative-config/services.js","declarative-config/upstreams.js","declarative-config/index.js","kubernetes/index.js","index.js"],"names":["getServers","obj","servers","getAllServers","api","p","Object","keys","paths","server","push","getSecurity","security","getName","defaultValue","slugifyOptions","name","info","title","generateSlug","str","options","replacement","lower","pathVariablesToRegex","result","replace","parseUrl","urlStr","parsed","url","parse","port","protocol","host","hostname","fillServerVariables","finalUrl","variables","default","Error","joinPath","p1","p2","generateSecurityPlugins","op","plugins","components","securitySchemes","securityItem","scheme","args","generateSecurityPlugin","generateApiKeySecurityPlugin","includes","in","type","config","key_names","generateHttpSecurityPlugin","toLowerCase","generateOpenIdConnectSecurityPlugin","openIdConnectUrl","issuer","scopes_required","generateOAuth2SecurityPlugin","auth_methods","plugin","key","indexOf","kongSecurity","isPluginKey","isRequestValidatorPluginKey","match","getPluginNameFromKey","generatePlugins","iterable","generator","generatePlugin","value","generateRequestValidatorPlugin","operation","version","parameter_schema","parameters","schema","explode","required","JSON","stringify","style","requestBody","content","bodySchema","mediatype","item","body_schema","enabled","generateServerPlugins","generateServerPlugin","generateOperationPlugins","generateOperationPlugin","generateServices","tags","length","service","generateService","serverUrl","routes","routePath","pathItem","method","fullPathRegex","route","generateRouteName","methods","toUpperCase","strip_path","securityPlugins","regularPlugins","numRoutes","n","pathSlug","summary","generateUpstreams","upstream","targets","target","generateDeclarativeConfigFromSpec","document","_format_version","services","upstreams","err","message","label","documents","warnings","generateKongForKubernetesConfigFromSpec","metadata","generateMetadata","apiVersion","kind","spec","rules","generateRules","otherDocuments","generatePluginDocuments","pluginNames","map","d","join","annotations","generateMetadataName","generateMetadataAnnotations","ingressName","i","serviceName","generateServiceName","servicePort","generateServicePort","backend","path","generateServicePath","tlsConfig","generateTlsConfig","tls","http","index","ports","find","pathname","nameFromKey","pData","dcPlugin","k8sPlugin","generate","specPath","Promise","resolve","reject","fs","readFile","contents","fileSlug","basename","allTags","generateFromString","specStr","parseSpec","generateFromSpec","SwaggerParser","YAML","openapi","dereference"],"mappings":"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","file":"index.js","sourceRoot":"../src","sourcesContent":["// @flow\nimport url from 'url';\nimport slugify from 'slugify';\n\nexport function getServers(obj: OpenApi3Spec | OA3PathItem): Array<OA3Server> {\n  return obj.servers || [];\n}\n\nexport function getAllServers(api: OpenApi3Spec): Array<OA3Server> {\n  const servers = getServers(api);\n\n  for (const p of Object.keys(api.paths)) {\n    for (const server of getServers(api.paths[p])) {\n      servers.push(server);\n    }\n  }\n\n  return servers;\n}\n\nexport function getSecurity(\n  obj: OpenApi3Spec | OA3Operation,\n): Array<OA3SecurityRequirement> | null {\n  return obj.security || [];\n}\n\nexport function getName(\n  obj: OpenApi3Spec | OA3Operation,\n  defaultValue?: string = 'openapi',\n  slugifyOptions?: {replacement: string, lower: boolean},\n): string {\n  let name;\n\n  if ((obj: any)['x-kong-name']) {\n    name = (obj: any)['x-kong-name'];\n  }\n\n  if (!name && obj.info && obj.info.title) {\n    name = obj.info.title;\n  }\n\n  return generateSlug(name || defaultValue, slugifyOptions);\n}\n\nexport function generateSlug(\n  str: string,\n  options: {replacement: string, lower: boolean} = {},\n): string {\n  options.replacement = options.replacement || '_';\n  options.lower = options.lower || false;\n  return slugify(str, options);\n}\n\nexport function pathVariablesToRegex(p: string): string {\n  const result = p.replace(/{([^}]+)}/g, '(?<$1>\\\\S+)');\n  if (result === p) {\n    return result;\n  }\n\n  // If anything was replaced, it's a regex, so add a line-ending match\n  return result + '$';\n}\n\nexport function parseUrl(\n  urlStr: string,\n): {|\n  host: string,\n  hostname: string,\n  port: string,\n  protocol: string,\n  pathname: string,\n|} {\n  const parsed: Object = url.parse(urlStr);\n\n  if (!parsed.port && parsed.protocol === 'https:') {\n    parsed.port = '443';\n  } else if (!parsed.port && parsed.protocol === 'http:') {\n    parsed.port = '80';\n  }\n\n  parsed.protocol = parsed.protocol || 'http:';\n  parsed.host = `${parsed.hostname}:${parsed.port}`;\n\n  return parsed;\n}\n\nexport function fillServerVariables(server: OA3Server): string {\n  let finalUrl = server.url;\n\n  const variables = server.variables || {};\n\n  for (const name of Object.keys(variables)) {\n    const defaultValue = variables[name].default;\n    if (!defaultValue) {\n      throw new Error(`Server variable \"${name}\" missing default value`);\n    }\n\n    finalUrl = finalUrl.replace(`{${name}}`, defaultValue);\n  }\n\n  return finalUrl;\n}\n\nexport function joinPath(p1: string, p2: string): string {\n  p1 = p1.replace(/\\/$/, '');\n  p2 = p2.replace(/^\\//, '');\n\n  return `${p1}/${p2}`;\n}\n","// @flow\n\nimport { getSecurity } from '../common';\n\nexport function generateSecurityPlugins(op: OA3Operation | null, api: OpenApi3Spec): Array<DCPlugin> {\n  const plugins = [];\n  const components = api.components || {};\n  const securitySchemes = components.securitySchemes || {};\n\n  const security = op ? getSecurity(op) : getSecurity(api);\n  for (const securityItem of security || []) {\n    for (const name of Object.keys(securityItem)) {\n      const scheme: OA3SecurityScheme = securitySchemes[name] || {};\n      const args = securityItem[name];\n\n      const p = generateSecurityPlugin(scheme, args);\n\n      if (p) {\n        plugins.push(p);\n      }\n    }\n  }\n\n  return plugins;\n}\n\nexport function generateApiKeySecurityPlugin(scheme: OA3SecuritySchemeApiKey): DCPlugin {\n  if (!['query', 'header', 'cookie'].includes(scheme.in)) {\n    throw new Error(`a ${scheme.type} object expects valid \"in\" property. Got ${scheme.in}`);\n  }\n  if (!scheme.name) {\n    throw new Error(`a ${scheme.type} object expects valid \"name\" property. Got ${scheme.name}`);\n  }\n\n  return {\n    name: 'key-auth',\n    config: { key_names: [scheme.name] },\n  };\n}\n\nexport function generateHttpSecurityPlugin(scheme: OA3SecuritySchemeHttp): DCPlugin {\n  if ((scheme.scheme || '').toLowerCase() !== 'basic') {\n    throw new Error(`Only \"basic\" http scheme supported. got ${scheme.scheme}`);\n  }\n\n  return { name: 'basic-auth' };\n}\n\nexport function generateOpenIdConnectSecurityPlugin(\n  scheme: OA3SecuritySchemeOpenIdConnect,\n  args: Array<any>,\n): DCPlugin {\n  if (!scheme.openIdConnectUrl) {\n    throw new Error(`invalid \"openIdConnectUrl\" property. Got ${scheme.openIdConnectUrl}`);\n  }\n\n  return {\n    name: 'openid-connect',\n    config: {\n      issuer: scheme.openIdConnectUrl,\n      scopes_required: args || [],\n    },\n  };\n}\n\nexport function generateOAuth2SecurityPlugin(\n  scheme: OA3SecuritySchemeOAuth2,\n  args: ?Array<any>,\n): DCPlugin {\n  return {\n    config: {\n      auth_methods: ['client_credentials'],\n    },\n    name: 'openid-connect',\n  };\n}\n\nexport function generateSecurityPlugin(\n  scheme: OA3SecurityScheme,\n  args: Array<any>,\n): DCPlugin | null {\n  let plugin: DCPlugin | null = null;\n\n  // Flow doesn't like this (hence the \"any\" casting) but we're\n  // comparing the scheme type in a more flexible way to favor\n  // usability\n  const type = (scheme.type || '').toLowerCase();\n\n  // Generate base plugin\n  if (type === 'apikey') {\n    plugin = generateApiKeySecurityPlugin((scheme: any));\n  } else if (type === 'http') {\n    plugin = generateHttpSecurityPlugin((scheme: any));\n  } else if (type === 'openidconnect') {\n    plugin = generateOpenIdConnectSecurityPlugin((scheme: any), args);\n  } else if (type === 'oauth2') {\n    plugin = generateOAuth2SecurityPlugin((scheme: any));\n  } else {\n    return null;\n  }\n\n  // Add additional plugin configuration from x-kong-* properties\n  for (const key of Object.keys((scheme: Object))) {\n    if (key.indexOf('x-kong-security-') !== 0) {\n      continue;\n    }\n\n    const kongSecurity = scheme[key];\n\n    if (kongSecurity.config) {\n      plugin.config = kongSecurity.config;\n    }\n  }\n\n  return plugin;\n}\n","// @flow\n\nexport function isPluginKey(key: String): Boolean {\n  return key.indexOf('x-kong-plugin-') === 0;\n}\n\nexport function isRequestValidatorPluginKey(key: String): Boolean {\n  return key.match(/-request-validator$/) != null;\n}\n\nexport function getPluginNameFromKey(key: String): String {\n  return key.replace(/^x-kong-plugin-/, '');\n}\n\ntype GeneratorFn = (key: string, value: Object, iterable: Object | Array) => DCPlugin;\n\nexport function generatePlugins(iterable: Array, generator: GeneratorFn): Array<DCPlugin> {\n  const plugins: Array<DCPlugin> = [];\n  for (const key of Object.keys(iterable)) {\n    if (!isPluginKey(key)) {\n      continue;\n    }\n\n    plugins.push(generator(key, iterable[key], iterable));\n  }\n\n  return plugins;\n}\n\nexport function generatePlugin(key: string, value: Object): DCPlugin {\n  const plugin: DCPlugin = {\n    name: value.name || getPluginNameFromKey(key),\n  };\n\n  if (value.config) {\n    plugin.config = value.config;\n  }\n\n  return plugin;\n}\n\nexport function generateRequestValidatorPlugin(obj: Object, operation: OA3Operation): DCPlugin {\n  const config: { [string]: Object } = {\n    version: 'draft4', // Fixed version\n  };\n\n  config.parameter_schema = [];\n\n  if (operation.parameters) {\n    for (const p of operation.parameters) {\n      if (!(p: Object).schema) {\n        throw new Error(\"Parameter using 'content' type validation is not supported\");\n      }\n      config.parameter_schema.push({\n        in: (p: Object).in,\n        explode: !!(p: Object).explode,\n        required: !!(p: Object).required,\n        name: (p: Object).name,\n        schema: JSON.stringify((p: Object).schema),\n        style: 'simple',\n      });\n    }\n  }\n\n  if (operation.requestBody) {\n    const content = (operation.requestBody: Object).content;\n    if (!content) {\n      throw new Error('content property is missing for request-validator!');\n    }\n\n    let bodySchema;\n    for (const mediatype of Object.keys(content)) {\n      if (mediatype !== 'application/json') {\n        throw new Error(`Body validation supports only 'application/json', not ${mediatype}`);\n      }\n      const item = content[mediatype];\n      bodySchema = JSON.stringify(item.schema);\n    }\n\n    if (bodySchema) {\n      config.body_schema = bodySchema;\n    }\n  }\n\n  return {\n    config,\n    enabled: true,\n    name: 'request-validator',\n  };\n}\n\nexport function generateServerPlugins(server: OA3Server): Array<DCPlugin> {\n  return generatePlugins(server, generateServerPlugin);\n}\n\nexport function generateServerPlugin(key: string, value: Object, server: OA3Server): DCPlugin {\n  return generatePlugin(key, value);\n}\n\nexport function generateOperationPlugins(operation: OA3Operation): Array<DCPlugin> {\n  return generatePlugins(operation, generateOperationPlugin);\n}\n\nexport function generateOperationPlugin(\n  key: string,\n  value: Object,\n  operation: OA3Operation,\n): DCPlugin {\n  if (isRequestValidatorPluginKey(key)) {\n    return generateRequestValidatorPlugin(value, operation);\n  }\n\n  return generatePlugin(key, value);\n}\n","// @flow\n\nimport {\n  fillServerVariables,\n  generateSlug,\n  getAllServers,\n  getName,\n  pathVariablesToRegex,\n} from '../common';\n\nimport { generateSecurityPlugins } from './security-plugins';\nimport { generateOperationPlugins, generateServerPlugins } from './plugins';\n\nexport function generateServices(api: OpenApi3Spec, tags: Array<string>): Array<DCService> {\n  const servers = getAllServers(api);\n\n  if (servers.length === 0) {\n    throw new Error('no servers defined in spec');\n  }\n\n  // only support one service for now\n  const service = generateService(servers[0], api, tags);\n  return [service];\n}\n\nexport function generateService(\n  server: OA3Server,\n  api: OpenApi3Spec,\n  tags: Array<string>,\n): DCService {\n  const serverUrl = fillServerVariables(server);\n  const name = getName(api);\n  const service: DCService = {\n    name,\n    url: serverUrl,\n    plugins: generateServerPlugins(server),\n    routes: [],\n    tags,\n  };\n\n  for (const routePath of Object.keys(api.paths)) {\n    const pathItem: OA3PathItem = api.paths[routePath];\n\n    for (const method of Object.keys(pathItem)) {\n      if (\n        method !== 'get' &&\n        method !== 'put' &&\n        method !== 'post' &&\n        method !== 'delete' &&\n        method !== 'options' &&\n        method !== 'head' &&\n        method !== 'patch' &&\n        method !== 'trace'\n      ) {\n        continue;\n      }\n\n      const operation: ?OA3Operation = pathItem[method];\n\n      // This check is here to make Flow happy\n      if (!operation) {\n        continue;\n      }\n\n      // Create the base route object\n      const fullPathRegex = pathVariablesToRegex(routePath);\n      const route: DCRoute = {\n        tags,\n        name: generateRouteName(api, pathItem, method, service.routes.length),\n        methods: [method.toUpperCase()],\n        paths: [fullPathRegex],\n        strip_path: false,\n      };\n\n      // Generate generic and security-related plugin objects\n      const securityPlugins = generateSecurityPlugins(operation, api);\n      const regularPlugins = generateOperationPlugins(operation);\n      const plugins = [...regularPlugins, ...securityPlugins];\n\n      // Add plugins if there are any\n      if (plugins.length) {\n        route.plugins = plugins;\n      }\n\n      service.routes.push(route);\n    }\n  }\n\n  return service;\n}\n\nexport function generateRouteName(\n  api: OpenApi3Spec,\n  pathItem: OA3PathItem,\n  method: string,\n  numRoutes: number,\n): string {\n  const n = numRoutes;\n  const name = getName(api);\n\n  if (typeof (pathItem: Object)['x-kong-name'] === 'string') {\n    const pathSlug = generateSlug((pathItem: Object)['x-kong-name']);\n    return `${name}-${pathSlug}-${method}`;\n  }\n\n  // If a summary key exists, use that to generate the name\n  if (typeof pathItem.summary === 'string') {\n    const pathSlug = generateSlug(pathItem.summary);\n    return `${name}-${pathSlug}-${method}`;\n  }\n\n  // otherwise, use a unique integer to prevent collisions\n  return `${generateSlug(name)}-path${n ? '_' + n : ''}-${method}`;\n}\n","// @flow\n\nimport { getName, parseUrl } from '../common';\n\nexport function generateUpstreams(api: OpenApi3Spec, tags: Array<string>) {\n  const servers = api.servers || [];\n\n  if (servers.length === 0) {\n    return [];\n  }\n\n  const upstream: DCUpstream = {\n    name: getName(api),\n    targets: [],\n    tags,\n  };\n\n  for (const server of servers) {\n    upstream.targets.push({\n      target: parseUrl(server.url).host,\n    });\n  }\n\n  return [upstream];\n}\n","// @flow\nimport { generateServices } from './services';\nimport { generateUpstreams } from './upstreams';\n\nexport function generateDeclarativeConfigFromSpec(\n  api: OpenApi3Spec,\n  tags: Array<string>,\n): DeclarativeConfigResult {\n  let document = null;\n  try {\n    document = {\n      _format_version: '1.1',\n      services: generateServices(api, tags),\n      upstreams: generateUpstreams(api, tags),\n    };\n  } catch (err) {\n    throw new Error('Failed to generate spec: ' + err.message);\n  }\n\n  // This remover any circular references or weirdness that might result\n  // from the JS objects used.\n  // SEE: https://github.com/Kong/studio/issues/93\n  return JSON.parse(JSON.stringify({\n    type: 'kong-declarative-config',\n    label: 'Kong Declarative Config',\n    documents: [document],\n    warnings: [],\n  }));\n}\n","// @flow\n\nimport { getName, getServers, parseUrl } from '../common';\nimport { generateSecurityPlugins } from '../declarative-config/security-plugins';\n\nexport function generateKongForKubernetesConfigFromSpec(\n  api: OpenApi3Spec,\n  tags: Array<string>,\n): KongForKubernetesResult {\n  const metadata = generateMetadata(api);\n  const document: KubernetesConfig = {\n    apiVersion: 'extensions/v1beta1',\n    kind: 'Ingress',\n    metadata,\n    spec: { rules: generateRules(api, metadata.name) },\n  };\n\n  const otherDocuments = generatePluginDocuments(api);\n\n  // Add Kong plugins as annotations to ingress definition\n  if (otherDocuments.length) {\n    const pluginNames = otherDocuments.map(d => d.metadata.name).join(', ');\n    if (document.metadata.annotations) {\n      document.metadata.annotations['plugins.konghq.com'] = pluginNames;\n    } else {\n      document.metadata.annotations = { 'plugins.konghq.com': pluginNames };\n    }\n  }\n\n  const documents = [...otherDocuments, document];\n\n  return ({\n    type: 'kong-for-kubernetes',\n    label: 'Kong for Kubernetes',\n    documents,\n    warnings: [],\n  }: KongForKubernetesResult);\n}\n\nfunction generateMetadata(api: OpenApi3Spec): K8sMetadata {\n  const metadata: K8sMetadata = {\n    name: generateMetadataName(api),\n  };\n\n  const annotations = generateMetadataAnnotations(api);\n  if (annotations) {\n    metadata.annotations = annotations;\n  }\n\n  return metadata;\n}\n\nexport function generateMetadataName(api: OpenApi3Spec): string {\n  const info: Object = api.info || {};\n  const metadata = info['x-kubernetes-ingress-metadata'];\n\n  // x-kubernetes-ingress-metadata.name\n  if (metadata && metadata.name) {\n    return metadata.name;\n  }\n\n  return getName(api, 'openapi', { lower: true, replacement: '-' });\n}\n\nexport function generateMetadataAnnotations(api: OpenApi3Spec): K8sAnnotations | null {\n  const info: Object = api.info || {};\n  const metadata = info['x-kubernetes-ingress-metadata'];\n  if (metadata && metadata.annotations) {\n    return metadata.annotations;\n  }\n\n  return null;\n}\n\nexport function generateRules(api: OpenApi3Spec, ingressName: string): K8sIngressRules {\n  return getServers(api).map((server, i) => {\n    const { hostname } = parseUrl(server.url);\n    const serviceName = generateServiceName(server, ingressName, i);\n    const servicePort = generateServicePort(server);\n    const backend = { serviceName, servicePort };\n    const path = generateServicePath(server, backend);\n\n    const tlsConfig = generateTlsConfig(server);\n    if (tlsConfig) {\n      return {\n        host: hostname,\n        tls: {\n          paths: [path],\n          ...tlsConfig,\n        },\n      };\n    }\n\n    return {\n      host: hostname,\n      http: { paths: [path] },\n    };\n  });\n}\n\nexport function generateServiceName(server: OA3Server, ingressName: string, index: number): string {\n  const backend = (server: Object)['x-kubernetes-backend'];\n\n  // x-kubernetes-backend.serviceName\n  if (backend && backend['serviceName']) {\n    return backend['serviceName'];\n  }\n\n  // x-kubernetes-service.metadata.name\n  const service = (server: Object)['x-kubernetes-service'];\n  if (service && service.metadata && service.metadata.name) {\n    return service.metadata.name;\n  }\n\n  // <ingress-name>-s<server index>\n  return `${ingressName}-s${index}`;\n}\n\nexport function generateTlsConfig(server: OA3Server): Object | null {\n  const tlsConfig = (server: Object)['x-kubernetes-tls'];\n  return tlsConfig || null;\n}\n\nexport function generateServicePort(server: OA3Server): number {\n  // x-kubernetes-backend.servicePort\n  const backend = (server: Object)['x-kubernetes-backend'];\n  if (backend && typeof backend.servicePort === 'number') {\n    return backend.servicePort;\n  }\n\n  const service = (server: Object)['x-kubernetes-service'] || {};\n  const spec = service.spec || {};\n  const ports = spec.ports || [];\n\n  // TLS configured\n  const tlsConfig = generateTlsConfig(server);\n  if (tlsConfig) {\n    if (ports.find(p => p.port === 443)) {\n      return 443;\n    }\n\n    if (ports[0] && ports[0].port) {\n      return ports[0].port;\n    }\n\n    return 443;\n  }\n\n  // x-kubernetes-service.spec.ports.0.port\n  if (ports[0] && ports[0].port) {\n    return ports[0].port;\n  }\n\n  return 80;\n}\n\nexport function generateServicePath(server: OA3Server, backend: K8sBackend): K8sPath {\n  const { pathname } = parseUrl(server.url);\n  const p: K8sPath = {\n    backend,\n  };\n\n  if (!pathname || pathname === '/') {\n    return p;\n  }\n\n  if (pathname.match(/\\/$/)) {\n    p.path = pathname + '.*';\n  } else {\n    p.path = pathname + '/.*';\n  }\n\n  return p;\n}\n\nexport function generatePluginDocuments(api: OpenApi3Spec): Array<KubernetesPluginConfig> {\n  const plugins = [];\n  for (const key of Object.keys(api)) {\n    if (key.indexOf('x-kong-plugin-') !== 0) {\n      continue;\n    }\n    const nameFromKey = key.replace('x-kong-plugin-', '');\n    const pData: Object = api[key];\n    const p: KubernetesPluginConfig = {\n      apiVersion: 'configuration.konghq.com/v1',\n      kind: 'KongPlugin',\n      metadata: {\n        name: `add-${pData.name || nameFromKey}`,\n      },\n      plugin: pData.name || key.replace('x-kong-plugin-', ''),\n    };\n\n    if (pData.config) {\n      p.config = pData.config;\n    }\n\n    plugins.push(p);\n  }\n\n  // NOTE: It isn't great that we're relying on declarative-config stuff here but there's\n  // not much we can do about it. If we end up needing this again, it should be factored\n  // out to a higher-level.\n  const securityPlugins = generateSecurityPlugins(null, api).map(dcPlugin => {\n    const k8sPlugin: KubernetesPluginConfig = {\n      apiVersion: 'configuration.konghq.com/v1',\n      kind: 'KongPlugin',\n      metadata: {\n        name: `add-${dcPlugin.name}`,\n      },\n      plugin: dcPlugin.name,\n    };\n\n    if (dcPlugin.config) {\n      k8sPlugin.config = dcPlugin.config;\n    }\n\n    return k8sPlugin;\n  });\n\n  return [...plugins, ...securityPlugins];\n}\n","// @flow\nimport fs from 'fs';\nimport path from 'path';\nimport { generateDeclarativeConfigFromSpec } from './declarative-config';\nimport { generateKongForKubernetesConfigFromSpec } from './kubernetes';\nimport SwaggerParser from 'swagger-parser';\n\nexport async function generate(\n  specPath: string,\n  type: ConversionResultType,\n  tags: Array<string> = [],\n): Promise<ConversionResult> {\n  return new Promise((resolve, reject) => {\n    fs.readFile(path.resolve(specPath), 'utf8', (err, contents) => {\n      if (err != null) {\n        reject(err);\n        return;\n      }\n\n      const fileSlug = path.basename(specPath);\n      const allTags = [`OAS3file_${fileSlug}`, ...tags];\n      resolve(generateFromString(contents, type, allTags));\n    });\n  });\n}\n\nexport async function generateFromString(\n  specStr: string,\n  type: ConversionResultType,\n  tags: Array<string> = [],\n): Promise<ConversionResult> {\n  const api: OpenApi3Spec = await parseSpec(specStr);\n  return generateFromSpec(api, type, ['OAS3_import', ...tags]);\n}\n\nexport function generateFromSpec(\n  api: OpenApi3Spec,\n  type: ConversionResultType,\n  tags: Array<string> = [],\n): ConversionResult {\n  switch (type) {\n    case 'kong-declarative-config':\n      return generateDeclarativeConfigFromSpec(api, tags);\n    case 'kong-for-kubernetes':\n      return generateKongForKubernetesConfigFromSpec(api, tags);\n    default:\n      throw new Error(`Unsupported output type \"${type}\"`);\n  }\n}\n\nexport async function parseSpec(spec: string | Object): Promise<OpenApi3Spec> {\n  let api: OpenApi3Spec;\n\n  if (typeof spec === 'string') {\n    try {\n      api = JSON.parse(spec);\n    } catch (err) {\n      api = SwaggerParser.YAML.parse(spec);\n    }\n  } else {\n    api = JSON.parse(JSON.stringify(spec));\n  }\n\n  // Ensure it has some required properties to make parsing\n  // a bit less strict\n\n  if (!api.info) {\n    api.info = {};\n  }\n\n  if (api.openapi === '3.0') {\n    api.openapi = '3.0.0';\n  }\n\n  return SwaggerParser.dereference(api);\n}\n"]}